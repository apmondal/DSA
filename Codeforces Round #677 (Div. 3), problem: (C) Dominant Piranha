#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> 
//using namespace __gnu_pbds; 
using namespace std;
using ll=long long;
const int mod=1e9+7;
const int N = 2e5+5;

//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> orderset; 

vector<ll> sieve(ll n) {     
    bool prim[n+1]; 
    memset(prim, true, sizeof(prim)); 
  
    for (ll p=2; p*p<=n; p++) {
        if (prim[p] == true) { 
            for (ll i=p*p; i<=n; i += p) 
                prim[i] = false; 
        } 
    }
    vector<ll>vec;
    for(int i=2;i<=n;i++){
        if(prim[i]){
            vec.push_back((ll)i);
        }
        
    }
    return vec;
}
void pri(vector<int>vec){
    for (int i = 0; i < vec.size(); i++) {
        cout<<vec[i]<<" ";
    }
    cout<<"\n";
}


void solve(){
    int n,sum=0;
    cin>>n;
    std::vector<int> vec(n);
    for (int i = 0; i < n; ++i){
        cin>>vec[i];
    }
    int mx=*max_element(vec.begin(),vec.end());
    int cnt=count(vec.begin(),vec.end(),mx);
    if(cnt==n){
        cout<<"-1\n";
        return;
    }
    if(cnt==1){
        for (int i = 0; i < n; i++) {
            if(vec[i]==mx){
                cout<<i+1<<"\n";
                return;
            }
        }
    }
    for (int i = 0; i < n; i++) {
        if(vec[i]==mx&&((i!=0&&vec[i-1]!=mx)||(i!=n-1&&vec[i+1]!=mx))){
            cout<<i+1<<"\n";
            return;
        }
    }
    cout<<-1<<"\n";
    
    
   
    
  
}

int main(){
    /*#ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout); 
    #endif*/
        ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
        int T=1;
        cin>>T;
        while(T--){
          solve();
        }
        return 0;
        
}
